# ワークフローの名前
name: Deploy Frontend to Azure

# ワークフローが実行されるトリガー
on:
  # 1. GitHubのActionsタブから手動で実行できるようにする
  workflow_dispatch:
    inputs:
      level:
        description: "デプロイするレベル"
        required: true
        default: "LV3"
        type: choice
        options: [LV1, LV2, LV3]

  # 2. メインブランチの特定ディレクトリにpushされたら自動実行
  push:
    branches: [main]
    paths:
      - ".github/workflows/deploy-frontend.yml"
      - "LV3/frontend/**"

jobs:
  # 'build-and-deploy' という名前のジョブを定義
  build-and-deploy:
    # 実行環境はUbuntuの最新版
    runs-on: ubuntu-latest

    # ジョブ全体で使う環境変数を設定
    env:
      # デプロイ対象のNode.jsバージョン
      NODE_VERSION: "22.x"
      # pnpmバージョン
      PNPM_VERSION: "10.x"
      # デプロイ対象のディレクトリパスを動的に設定
      WORKING_DIRECTORY: ${{ github.workspace }}/${{ github.event.inputs.level || 'LV3' }}/frontend # 絶対パスに変更

    steps:
      # --- Step 1: ソースコードのチェックアウト ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Step 2: 現在のディレクトリを確認 ---
      - name: Check current directory
        run: |
          pwd
          cd ${{ env.WORKING_DIRECTORY }}  # 確実に正しいディレクトリに移動
          pwd

      # --- Step 3: pnpmをインストールし、キャッシュを有効化する ---
      - name: Set up pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      # --- Step 4: Node.jsのセットアップ ---
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      # --- Step 5: 依存関係のインストール ---
      - name: Install dependencies
        run: |
          # cd ${{ env.WORKING_DIRECTORY }}  # 確実に正しいディレクトリに移動
          pwd  # 現在のディレクトリを確認
          pnpm install --frozen-lockfile
          pnpm -r build

      # --- Step 6: Next.jsアプリケーションのビルド ---
      # 本番環境用のAPI URLを環境変数として渡すことが重要
      - name: Build Next.js app
        run: |
          # cd ${{ env.WORKING_DIRECTORY }}  # 確実に正しいディレクトリに移動
          pwd  # 現在のディレクトリを確認
          if [ -z "${{ secrets.NEXT_PUBLIC_API_URL_PRODUCTION }}" ]; then
            echo "Error: NEXT_PUBLIC_API_URL_PRODUCTION is not set"
            exit 1
          fi
          pnpm build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL_PRODUCTION }}

      # --- Step 7: ZIPパッケージの作成 ---
      - name: Create deployment package
        run: |
          cd ${{ env.WORKING_DIRECTORY }}/.next/standalone  # 確実に正しいディレクトリに移動
          pwd  # 現在のディレクトリを確認
          zip -ry ../../deployment.zip ./*

      # --- Step 8: Azure App Serviceへのデプロイ ---
      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.FRONTEND_APP_SERVICE_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9ACA2A907F9C4DF89ADE05588C89F2CE }}
          package: ${{ env.WORKING_DIRECTORY }}/deployment.zip
