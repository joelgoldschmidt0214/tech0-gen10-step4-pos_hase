# ワークフローの名前
name: Deploy Frontend to Azure

# ワークフローが実行されるトリガー
on:
  # 1. GitHubのActionsタブから手動で実行できるようにする
  workflow_dispatch:
    inputs:
      level:
        description: "デプロイするレベル"
        required: true
        default: "LV3"
        type: choice
        options: [LV1, LV2, LV3]

  # 2. メインブランチの特定ディレクトリにpushされたら自動実行
  push:
    branches: [main]
    paths:
      - ".github/workflows/deploy-frontend.yml"
      - "LV3/frontend/**"

jobs:
  # 'build-and-deploy' という名前のジョブを定義
  build-and-deploy:
    # 実行環境はUbuntuの最新版
    runs-on: ubuntu-latest

    # ジョブ全体で使う環境変数を設定
    env:
      # デプロイ対象のNode.jsバージョン
      NODE_VERSION: "22.x"
      # デプロイ対象のディレクトリパスを動的に設定
      WORKING_DIRECTORY: ./${{ github.event.inputs.level || 'LV3' }}/frontend

    steps:
      # --- Step 1: ソースコードのチェックアウト ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Step 2: Node.jsとpnpmのセットアップ ---
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # pnpmをインストールし、キャッシュを有効化する
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10 # pnpmのバージョンを指定
          run_install: false

      # --- Step 3: 依存関係のインストール ---
      - name: Install dependencies
        run: |
          cd ${{ env.WORKING_DIRECTORY }}
          pnpm install

      # --- Step 4: Next.jsアプリケーションのビルド ---
      # 本番環境用のAPI URLを環境変数として渡すことが重要
      - name: Build Next.js app
        run: |
          cd ${{ env.WORKING_DIRECTORY }}
          # 環境変数の存在確認を追加
          if [ -z "${{ secrets.NEXT_PUBLIC_API_URL_PRODUCTION }}" ]; then
            echo "Error: NEXT_PUBLIC_API_URL_PRODUCTION is not set"
            exit 1
          fi
          pnpm build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL_PRODUCTION }}

      # デプロイ用のzipファイルを作成する
      - name: Create deployment package
        run: |
          cd ${{ env.WORKING_DIRECTORY }}
          # まずstandaloneディレクトリの内容をコピー
          mkdir -p deploy
          cp -r .next/standalone/* deploy/
          cp -r .next/static deploy/.next/
          cp -r public deploy/

          # デプロイフォルダの構造を確認
          echo "=== Checking deploy folder structure ==="
          # 不要なnode_modulesとcacheディレクトリを除外
          tree -L 3 -I 'node_modules|cache' deploy/

          # .nextディレクトリの構造を確認（静的ファイルのみ）
          echo "=== Checking .next/static directory ==="
          tree -L 2 deploy/.next/static

          # デプロイパッケージを作成
          cd deploy
          zip -r ../deployment.zip ./*

          # 作成したZIPファイルの情報を確認
          echo "=== Checking deployment.zip ==="
          ls -lh ../deployment.zip

      # --- Step 5: Azure App Serviceへのデプロイ ---
      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.FRONTEND_APP_SERVICE_NAME }}
          # パスを修正
          package: ${{ env.WORKING_DIRECTORY }}/deployment.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9ACA2A907F9C4DF89ADE05588C89F2CE }}
